name: Run tests
on:
  - push
  - pull_request

env:
  RUST_BACKTRACE: 1

jobs:
  linting:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@nightly
        with:          
          components: rustfmt, clippy
      - name: Run rustfmt
        run: 'cargo fmt --all --check'
      - name: Run clippy
        run: 'cargo clippy --all-targets -- -D warnings'

  windows-msvc:
    strategy:
      fail-fast: false
      matrix:
        toolchain:
          - 1.78.0
          - stable
    runs-on: windows-latest
    name: ${{ matrix.runner }} ${{ matrix.toolchain }} ${{ matrix.features }}
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: ${{ matrix.toolchain }}
      - name: Run tests
        run: cargo test

  windows-gnu:
    strategy:
      fail-fast: false
      matrix:
        toolchain:
          - 1.78.0-gnu
          - stable-gnu
    runs-on: windows-latest
    name: windows-gnu ${{ matrix.toolchain }}
    steps:
      - uses: actions/checkout@v4
      - name: Setup MSYS2
        uses: msys2/setup-msys2@61f9e5e925871ba6c9e3e8da24ede83ea27fa91f
        with:
          release: false
          path-type: inherit
      - uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: ${{ matrix.toolchain }}
      - name: Run tests
        shell: msys2 {0}
        run: cargo test

  macos:
    strategy:
      fail-fast: false
      matrix:
        runner:
          - macos-13
          - macos-14
        toolchain:
          - 1.78.0
          - stable
        features:
          - "--no-default-features"
          - "--features system"
    runs-on: ${{ matrix.runner }}
    name: ${{ matrix.runner }} ${{ matrix.toolchain }} ${{ matrix.features }}
    steps:
      - uses: actions/checkout@v4
      - name: Install dependencies
        run: brew install autoconf automake libtool libffi
      - uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: ${{ matrix.toolchain }}
      - name: Run tests
        run: 'cargo test ${{ matrix.features }}'

  linux:
    strategy:
      fail-fast: false
      matrix:
        runner:
          - ubuntu-24.04
          - ubuntu-24.04-arm
        toolchain:
          - 1.78.0
          - stable
        features:
          - "--no-default-features"
          - "--features system"
    runs-on: ubuntu-latest
    name: ${{ matrix.runner }} ${{ matrix.toolchain }} ${{ matrix.features }}
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: ${{ matrix.toolchain }}
      - name: Run tests
        run: 'cargo test ${{ matrix.features }}'

  free-bsd:
    runs-on: ubuntu-latest
    name: FreeBSD
    steps:
      - uses: actions/checkout@v4
      - name: Test in FreeBSD
        id: test
        uses: vmactions/freebsd-vm@v1
        with:
          usesh: true
          prepare: |
            pkg install -y libffi curl
            curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh -s -- -y
          run: |
            . "$HOME/.cargo/env"
            cargo test

  qemu:
    runs-on: ubuntu-latest
    name: QEMU (armv7, powerpc64, powerpc64le, riscv64, s390x, sparc64)
    steps:
      - uses: actions/checkout@v4
      - name: Setup and run tests
        run: 'scripts/qemutests.sh SETUP'
